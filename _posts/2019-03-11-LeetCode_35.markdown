---
layout:     post
title:      "「LeetCode」——「35」—— Search Insert Position"
subtitle:   " 记录打码。 "
date:       2019-03-11 
author:     "LeeHW"
header-img: "img/post-bg-digital-native.jpg"
catalog: true
tags:
    - LeetCode_Easy
---

## 题目

Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

You may assume no duplicates in the array.

**Example 1:**

```
Input: [1,3,5,6], 5
Output: 2
```

**Example 2:**

```
Input: [1,3,5,6], 2
Output: 1
```

**Example 3:**

```
Input: [1,3,5,6], 7
Output: 4
```

**Example 4:**

```
Input: [1,3,5,6], 0
Output: 0
```

---

## 代码

```c++
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int L=0,R=nums.size()-1;
        while(L<=R)
        {
            int mid=L+(R-L)/2;
            if (nums[mid]==target) return mid;
            if (nums[mid]<target)  L=mid+1;
            else R=mid-1;
        }
        return L;
    }
};
```



---

## 结语

使用二分法的思路即可。

二分法跳转：[「LeetCode」——「69」—— Sqrt(x)](https://lihongwei.site/2019/03/05/LeetCode_69/)