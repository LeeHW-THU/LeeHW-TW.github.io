---
layout:     post
title:      "「LeetCode」——「21」—— Merge Two Sorted Lists"
subtitle:   " 记录打码。 "
date:       2019-03-07 
author:     "LeeHW"
header-img: "img/post-bg-digital-native.jpg"
catalog: true
tags:
    - LeetCode_Easy
---

## 题目

Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

**Example:**

```
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4
```

---

## 代码

```c++
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL) return l2;
        if(l2==NULL) return l1;
        
        if(l1->val < l2->val)
        {
            l1->next=mergeTwoLists(l1->next,l2);
            return l1;
        }
        
        l2->next=mergeTwoLists(l1,l2->next);
        return l2;
    }
};
```



---

## 结语

和不熟悉`递归`的同学分析一下`递归`：

```
TestCase
l1=[1,5]
l2=[2,6]
```

![M􏰀ergeTw􏰁Lists](http://lihongwei.site/img/M􏰀ergeTw􏰁Lists.png)

每层递归都是不同颜色的，`由深到浅`return回来。

（emmmm不知道要怎么`图解`比较好，本菜鸡可能还是对`递归`理解不透吧）



