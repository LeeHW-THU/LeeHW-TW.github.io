---
layout:     post
title:      "「LeetCode」——「27」—— Remove Element"
subtitle:   " 记录打码。 "
date:       2019-03-10 
author:     "LeeHW"
header-img: "img/post-bg-digital-native.jpg"
catalog: true
tags:
    - LeetCode_Easy
---

## 题目

Given an array *nums* and a value *val*, remove all instances of that value [**in-place**](https://en.wikipedia.org/wiki/In-place_algorithm) and return the new length.

Do not allocate extra space for another array, you must do this by **modifying the input array in-place** with O(1) extra memory.

`The order of elements can be changed. It doesn't matter what you leave beyond the new length.`

**Example 1:**

```
Given nums = [3,2,2,3], val = 3,

Your function should return length = 2, with the first two elements of nums being 2.

It doesn't matter what you leave beyond the returned length.
```

**Example 2:**

```
Given nums = [0,1,2,2,3,0,4,2], val = 2,

Your function should return length = 5, with the first five elements of nums containing 0, 1, 3, 0, and 4.

Note that the order of those five elements can be arbitrary.

It doesn't matter what values are set beyond the returned length.
```

---

## 代码

```c++
class Solution {
public:
    int removeElement(vector<int>& nums, int val) {
        int j=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]!=val)
            {   
                nums[j]=nums[i];
                j++;
            }
        }
        return j;
    }
};
```



---

## 结语

返回结果比较坑，没注意到题目要求。

注意：**元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。**



